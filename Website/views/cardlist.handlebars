<div class="container">
  <h2>Credit Cards</h2>
  <br>
</div>

{{#each items}}

<div class="container" style="margin-bottom:15px; margin-top:15px">
  
  <div class="row equal">
    <div class="col-xs-6 col-sm-3" style="background-color:lavender;">
      <h3><b>{{this.bankName}}</b></h3>
    <hr>
    <p><img src="/images/banklogo.jpg" width="250px"></p>
    <h4>Short term: <i>{{this.bankRatingShort}}</i>
    <br>Long term: <i>{{this.bankRatingLong}}</i>
    </h4>    
  </div>
    <div class="col-xs-6 col-sm-3" style="background-color:skyblue;">
      <h3><b>{{this.cardType}}</b></h3>
    <hr>
    <p><img src="/images/cardlogo.jpg" width="220px"><br>
    </p>
    <h4>{{this.cardName}}</h4> <br>
  </div>
    <div class="clearfix visible-xs"></div>
     <div class="col-xs-6 col-sm-3" style="background-color:lightgray;">
      <h3><b>Charges</b></h3>
      <hr>
      <p class="" >
        Interest Rate (Monthly): {{this.interestRateMonthly}}<br>
        Annual Fee: {{this.annualFee}}<br>
        Late Payment Fee: {{this.latePaymentFee}}<br>
        Over Limit Charge: {{this.overLimitCharge}}<br>
        Cash Advance Limit: {{this.cashAdvanceLimit}}<br>
        Supplimentary Card: {{this.numberOfSupplementaryCard}}<br>
        Supplimentary Card Fee: {{this.supplementaryCardFee}}<br>
        Card Replacement Fee: {{this.cardReplacementFee}}      
      </p>
    
 
  </div>
 
  
    <div class="col-xs-6 col-sm-3" style="background-color:silver;">
      <h3><b>Rating______</b></h3>
      <hr>
      <br>
      <button type="button" class="btn btn-default" style="margin-left: 10px;">Rate This</button><br>
      <br>
      <button type="button" class="btn btn-action">Get This Card</button><br>
      <br>
      <br>
    </div>
  </div>
</div>

 {{/each}}




<!-- <div class="container">
  <h2>Credit Card List</h2>
  <p></p>            
  <table id="cardtable" class="table table-striped">
    <thead>
      <tr>
        <th>Bank Name</th>
        <th>Card Name</th>
        <th>Card Type</th>
        <th>Annual Fee</th>
        <th>Monthly Interest Rate</th>
        <th>Over Limit Charge</th>
        <th>Cash Advance Limit</th>
        <th>Cash Advance Charge (Local)</th>
        <th>Cash Advance Charge (International)</th>
      </tr>
    </thead>
    <tbody>
    	{{#each items}}
      <tr class="item">
        <td>{{ this.bankName}}</td>
        <td>{{ this.cardName}}</td>
        <td>{{ this.cardType}}</td>
        <td>{{ this.annualFee}}</td>
        <td>{{ this.interestRateMonthly}}</td>
        <td>{{ this.overLimitCharge}}</td>
        <td>{{ this.cashAdvanceLimit}}</td>
        <td>{{ this.cashAdvanceChargeLocal}}</td>
        <td>{{ this.cashAdvanceChargeInternational}}</td>
    </tr>
    {{/each}}
      
    </tbody>

    
  </table>

-->  

<!-- script js for sorting -->
<!-- 
 <script>
function sortTable(n) {
  var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
  table = document.getElementById("myTable");
  switching = true;
  //Set the sorting direction to ascending:
  dir = "asc"; 
  /*Make a loop that will continue until
  no switching has been done:*/
  while (switching) {
    //start by saying: no switching is done:
    switching = false;
    rows = table.rows;
    /*Loop through all table rows (except the
    first, which contains table headers):*/
    for (i = 1; i < (rows.length - 1); i++) {
      //start by saying there should be no switching:
      shouldSwitch = false;
      /*Get the two elements you want to compare,
      one from current row and one from the next:*/
      x = rows[i].getElementsByTagName("TD")[n];
      y = rows[i + 1].getElementsByTagName("TD")[n];
      /*check if the two rows should switch place,
      based on the direction, asc or desc:*/
      if (dir == "asc") {
        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch= true;
          break;
        }
      } else if (dir == "desc") {
        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
          //if so, mark as a switch and break the loop:
          shouldSwitch = true;
          break;
        }
      }
    }
    if (shouldSwitch) {
      /*If a switch has been marked, make the switch
      and mark that a switch has been done:*/
      rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
      switching = true;
      //Each time a switch is done, increase this count by 1:
      switchcount ++;      
    } else {
      /*If no switching has been done AND the direction is "asc",
      set the direction to "desc" and run the while loop again.*/
      if (switchcount == 0 && dir == "asc") {
        dir = "desc";
        switching = true;
      }
    }
  }
}
</script>

    
</div>

-->